##########################################
#* Queries & Mutations
type Query {
  friend: Friend
  getOneFriend(id: ID): Friend
  getAllAliens: [Alien]
  getRadiator: [Radiator]
  getFloodlight: [Floodlight]
  getRawSensor: [Sensor]
}

type Mutation {
  createFriend(input: FriendInput): Friend
  updateFriend(input: FriendInput): Friend
  deleteFriend(id: ID!): String
}

##########################################
#* Inputs
input FriendInput {
  id: ID
  firstName: String
  lastName: String
  gender: Gender
  email: String
  age: Int
  language: String
  contacts: [ContactInput]
}

input ContactInput {
  firstName: String
  lastName: String
}

##########################################
#* Data
type Sensor {
  room: String
  temperature: Float
  humidity: Float
}

type Radiator {
  room: String
  inlet: Float
  outlet: Float
}

type Floodlight {
  state: Boolean
}

type Friend {
  id: ID
  firstName: String
  lastName: String
  gender: Gender
  email: String
  age: Int
  Language: String
  contacts: [Contact]
}

type Alien {
  id: ID
  firstName: String
  lastName: String
  planet: String
}

type Contact {
  firstName: String
  lastName: String
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

type Email {
  email: String
}

type Books {
  title: String
  author: String
}
